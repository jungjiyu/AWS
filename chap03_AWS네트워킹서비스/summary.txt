3.1 네트워크 기본 개념
 네트워킹 networking : 서로 연결한다 . 자원과 자원을 연결하여 통신하는 환경
 네트워킹 요소 :
	: OSI 7계층 모델 >> 네트워킹 통신 구조를 계층 7개로 분류하는 방식
		: 1계층 - 물리 계층 physical layer : 전기적, 기계적인 특성을 이용해서 통신 케이블로 데이터를 전송하는 계층(물리적 장비)
			: 단지 데이터를 전달"만" 하고 받으려는 데이터에 대한 에러에 대한 검사는 안함
			: *** 단위) 비트 단위(= 0 , 1 로 나타나진다 = 전기적으로 on off 다)
			:  통신케이블,리피터, 허브

		: 2계층 - 데이터링크 계층 data linklayer : 물리계층을 통해 송수신되는 데이터의 오류와 흐름을 관리하여 신뢰성 제공
			: 1계층이 물리적 계층이었다면 2계층은 논리적 계층
			:*** 단위 )프레임
				: 2 계층에서 데이터를 전달하는 단위를 걍 프레임이라 함
				: 프레임 단위로 MAC 주소를 부여하여 통신
					: MAC 주소를 사용하지만 ARP 가 2계층에 해당하지 않는 것은 ip 주소 정보가 없기 때문
			:  브릿지, 스위치, 이더넷,토큰링, MAC 등
 
		: 3계층 - 네트워크 계층 network layer :  라우팅 프로토콜을 이용해서 데이터를 목적지까지 최대한 안전하고 빠르게 전달하는 계층
			:  빠른 길을 찾는 개념
			:*** 단위) 패킷 packet 
				: 3계층에서 데이터를 전달하는 단위를 걍 패킷이라고 함
			: 라우터, IP , ICMP , ARP 등

		: 4계층 - 전송 계층 transport layer : 정보를 분할하고, 상대편에 도달하기 전에 다시 합치는 과정을 담당
				: 큰 통나무를 그냥 배송하면 통나무에 상처 너무 많이남(중간에 터널에 부딪히고 뭐하고). 차라리 일정하게 통나무를 잘라서 배송하고, 목적지 도달이전에 하나로 합침
				: port 번호와 전송방식(TCP || UDP) 결정 하여 TCP 헤더를 붙여서 두 지점간의 신뢰성 있는 데이터를 주고 받게 함
			: ***단위) 세그먼트
			: 게이트웨이, TCP, UDP 등 

		: 5계층 - 세션 계층 session layer: 세션을 생성 및 종료
			: 그러니까 다운로드 받던거 중지하고 끄고, 나중에 그거 다시 다운로드 받으면 이미 다운로드 받았던 부분까지는 빠르게 된다.
			: API, Sokcet, SSL , TSL 등

		: 6계층 - 표현 계층 presentaion layer : 전송하는 데이터의 표현 방식(데이터변환 압축 ,암호화등 인코딩 방식)을 결정
			: JPG , GIF, ASCII 등

		: 7계층 - 응용 계층 Application layer :  최종 목적지. 응용 프로세스와 직접 관계하여 일반적인 응용 서비스르 수행(explore, chrome)
			: 대표 프로토콜) HTTP , FTP, IMAP 등




IP Internet Protocol 주소 >> 인터넷상 IT 자원을 식별하는 고유한 주소
	구조 
		네트워크 ID >> 네트워크를 구분해주는 ID 
			: 네트워크가 같다 == 네트워크 대역대가 같다 == 네트워크 ID 가 같다
		호스트 ID >> 해당 네트워크에 속한 사용자에게 부여하는 고유의 번호
			: 조합 가능한 호스트 ID 개수 만큼 해당 네트워크에서 IP 생성 가능한 것 
				ex ) 호스트 ID 가 두 블럭 >> 2 ^ 16 즉 65536 개의 호스트 ID 를 가질 수 있으므로, 해당 대역에서 65536 개의 IP 생성 가능
	버전 
		: IPv4 >> 일반적으로 많이 씀
			: 4칸이 3개의 온점으로 구분되어 표현됨. 
				: 각 칸은 10진수 || 2진수로 표현됨
			: 가용범위가 부족한 것을 보완하고자 NAT, 서브넷팅 , private IP 등을 활용한다
		: IPv6
	
	분류
	    1. 통신 용도에 따른 분류
		(1) public 공인 IP >> 실제 인터넷 상에서 사용되는, 유일한 , ISP( Internet Service Provider ) 에서 제공하는 주소
		(2) private 사설 IP >> 인터넷이 아닌 독립된 네트워크 내부에서만 사용되는, 유일하진 않은, 네트워크 관리자가 제공하는 주소
			: 사설 IP 의 분류(클래스)와 범위
				:  tip 
				    : 젤 자주쓰는 192 번대 ~ 는 C클, 1바이트의 거의 끝인 ~126 은 A 클, 나머지는 B클이다
				    : 서브넷 마스크의 255 개수는 해당 클래스의 networkID 의 옥텟 갯수와 같음

				1. Class A >> 1~126까지 (= 첫 블락만 네트워크 ID부분 )  , 255.0.0.0(/8)
				2. Class B >> 128.0~191.255까지(= 앞 두블락만 네트워크 ID부분) ,255.255.0.0 (/16)
				3. Class C>> 192.0.0~223.255.255 까지(= 앞 세 블락이 네트워크 ID부분) , 255.255.255.0 (/24)
				
	    2. 할당 방식에 따른 분류
		(1) 고정 IP >> 네트워크 관리자가 수동으로 할당하는 방식
		(2) 유동 IP >> 특정 서버가 IP 주소 범위에 따라 동적 할당하는 방식
			: "DHCP Dynamic Host Configuration Protocol 을 통해 주소를 제공하는 서버" 와 "주소를 할당받는 클라이언트" 로 구성됨
			: IP 를 임대lease 하는 형태로 운영됨
		
				
				
DHCP Dynamic Host Configuration Protocol  >> 동적 호스트 구성 프로토콜. 호스트의 IP주소와 각종 TCP/IP 프로토콜의 기본 설정을 클라이언트에게 자동적으로 제공해주는 프로토콜
	: 기능 
		: 네트워크 안의 컴퓨터에 자동으로 네임 서버 주소, IP 주소, 게이트웨이 주소를 할당
		: 해당 클라이언트에게 일정 기간 임대해주는 동적 주소 할당

	: 네트워크에 사용되는 IP주소를 DHCP서버가 중앙집중식으로 관리하는 클라이언트/서버 모델을 사용
	: DHCP 의 구성
		1. DHCP 서버 >> 클라이언트에게 IP 할당 요청이 들어오면 일정한 범위의 IP 주소를 자동으로 할당해주는 서버.
			: DHCP 서버가 다운되면 IP 할당이 제대로 이뤄지지 않는다

		2. DHCP 클라이언트 >> 시스템이 시작하면 DHCP 서버에 IP 주소를 요청하는 쪽.
			: IP 주소를 부여받으면 TCP/IP 설정이 초기화되고 다른 호스트와 TCP/IP로 통신 가능해짐.
			: DHCP 클라이언트 를 단말 이라고도  한다

	: DHCP 프로토콜 원리
		: 임대 Lease>> DHCP 서버가 IP 주소를 영구적으로 단말에 할당하는 것이 아닌 , 특정 기간동안만 해당 IP를 임대 해주는 개념
			: DHCP 클라이언트가 임대 기간 이후에도 해당 IP 주소 사용을 원한다면 임대기간연장 IP Address Renewal 을 DHCP 에 요청 필요
			: DHCP 클라이언트가 해당 IP 주소가 더이상 필요하지 않다면 IP 주소 반납 절차 Ip address release 수행

	: IP 주소 할당 절차
		step1. DHCP Discover  >> 클라이언트가 DHCP 서버를 찾기 위한 "브로드캐스트" 메세지
			: 방향 >>클라이언트 -> DHCP 서버
 			: 주요 파라미터 >> Client MAC
			: 브로드캐스트 메세지 이기에 2개 이상의 DHCP 서버가 이에 대해 응답 가능

		step2. DHCP Offer >> 클라이언트를 감지한 DHCP 서버가 해당 DHCP 서버의 존재와 단말에 할당할 IP 주소 등 다양한 네트워크 정보를 담아 보내는 메세지
			: 방향 >>  DHCP 서버 -> 클라이언트
			: 주요 파라미터 >> 
				Client MAC: 클라이언트의 MAC 주소
				Your IP: 클라이언트에 할당(임대)할 IP 주소
				Subnet Mask (Option 1)
				Router (Option 3): 클라이언트의 Default Gateway IP 주소
				DNS (Option 6): DNS 서버 IP 주소
				IP Lease Time (Option 51): 클라이언트가 IP 주소를 사용(임대)할 수 있는 기간(시간)
				DHCP Server Identifier (Option 54): DHCP Offer를 보낸 DHCP 서버의 주소. 2개 이상의 DHCP 서버가 DHCP Offer를 보낼 수 있으므로 각 DHCP 서버는 자신의 IP 주소를 메세지에 포함

		step3. DHCP request : DHCP 서버의 존재와 제공받을 네트워크 정보를 수신받은 DHCP 클라이언트가 하나의 DHCP 서버를 선택하여 해당 서버에게 클라이언트가 사용할 네트워크 정보를 요청하는 메세지
			: 방향 >> 클라이언트 -> DHCP 서버
			: 주요 파라미터 >> 
				Client MAC 
				Requested IP Address ( 사용을 요청할 IP 주소 - DHCP Offer의 Your IP 주소 )
				DHCP Server Identifier ( 선택한 DHCP 서버의 IP 주소 )


		step4. DHCP ACK : DHCP 서버가 최종적으로 할당할 IP 주소 승인을 알리는 메세지
			: DHCP Ack를 수신한 클라이언트는 IP 주소를 포함한 네트워크 정보를 획득(임대)하게 되고, 인터넷 사용이 가능하게 됨
			: 방향 >> DHCP 서버 -> 클라이언트
			: 파라미터 >> DHCP Offer의 네트워크 정보와 동일
	:https://velog.io/@inhwa1025/DHCP%EB%9E%80-DHCP-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C%EC%9D%98-%EC%9B%90%EB%A6%AC		


서브넷과 서브넷 마스크 >>host 필드 영역의 앞 비트 부분을 최대한 networkID 화 하여 hostID 영역을 줄여나간다
	: 서브넷 subnet >> 부분 네트워크. 하나의 네트워크를 분할하여 만들어진 네트워크 하나
		: IP 낭비를 줄이기 위해 도입된 개념( 실제로 조합 가능한 hostID 의 개수만큼 호스트 할당할 필요가 없을 때 사용)
		: 동일한 서브넷이란건 동일한 네트워크란 걸 의미. 네트워크 ID 부분인 같다

	: 서브넷 마스크 subnet mask >>  networkID 구하는데 사용되는 툴 같은것
		: IP 주소와 동일한 32비트 구조, 8비트 씩 4블럭 . 
			: ip와 다른점이 있다면 무조건 앞에서부터 쭉 1로 채워져야됨. 중간에 딴거 끼면 안되고. 0 한번이라도 나온 경우 그 뒤로 계속 0.
			ex ) 11111111.00000000.00000000.00000000 = 255.0.0.0
				11111111.11111111.11111111.10000000 = 255.255.255.128
		: 얼굴에 마스크를 쓰면 얼굴이 가려지는 것처럼, 서브넷에 마스크를 씌워 필요없는 IP 를 가린다는 의미로 마스크임
		: 사용 방법 >> IP 주소와 서브넷 마스크를 and 연산 시키면 , "네트워크 ID" 주소를 구할 수 있음. 

	: 서브넷팅 >> 하나의 네트워크를 여러개의 서브넷으로 분리하는 것
		: host 필드 영역의 앞 비트 부분을 최대한 networkID 화 하여 hostID 영역을 줄여나간다
			: 일단 network 필드는 못 건드리고 우리가 건드릴 수 있는 부분은 host 필드이다. 여기서 n 개의 비트를 networkID 화 하면 할당 가능한 네트워크 수는 2**n 개가 되고, 할당 가능한 호스트 수는 2**(8-n) 개가 된다(그러니까 2**(networkID 화 하고 나눈 비트 개수) ).
				: 실제로 할당 가능한 호스트 수는  2**(8-n) - 2 이다 << hostID 가 0 인거는 NetworkAddress 로, 255 인거는 Broadcast 로 고정되어있다 
 		: 결롡적으로는 서브넷 마스크 값이 커질수록 할당가능한 호스트 수는 줄어든다



CIDR Classless Inter-Domain Routing : 서브넷 마스크를 1의 갯수로 간략하게 표현하는 것. 서브넷 마스크의 표현 방법.
	:  IP 주소 뒤에 슬래시("/")와 숫자를 붙여 서브넷 마스크의 길이를 나타냄
		ex ) 192.168.0.0/24 >> 24비트의 서브넷 마스크를 사용하는 네트워크


라우팅과 라우터
	라우팅 routing >>네트워크 상에서 데이터를 보낼때 최적의 경로를 선택하는 과정
	라우터 router >> 라우팅 하는 장치. 
		: routing table 이라는 서브넷의 경로 리스트를 가지고 라우팅 하게 된다


TCP 와 UDP >> OSI 7 계층의 전송 계층의 대표 프로토콜들 . 데이터 전송을 담당
	TCP Transmission Control Protocol >> 1:1 통신 방식
		: 연결형 프로토콜 >> 연결이 성공해야 통신이 가능
		: 패킷이 제대로 도착했는지 확인한다
		: 신뢰성 높음 but 전송속도 느림
		: 속도보다 안정적인 데이터 전송이 필요할 때 사용

	UDP User Diagram Protocol >> n:n 통신 방식
		:  비연결  프로토콜 >> 데이터를 주고받을 때 연결 절차를 거치지 않고 발신자가 일방적으로 데이터를 발신하는 방식
		: 패킷이 제대로 도착했는지 확인 안한다
		: 신뢰성 낮음 but 전송속도 빠름
		: 데이터 유실에 큰 지장 없고 빠른 속도가 필요할 때 사용


	: TCP 와 UDP 를 사용하는 응용 서비스는 서로를 구분할 수 있도록 포트번호를 사용
		: IANA 라는 관리 기관서 정의
		: 포트 번호 범위
			well-known port : 0~1023
			registered port : 1024 ~ 1024~49151 
			dynamic port : 49152 ~ 65535



TCP/IP >>  프로토콜들의 모음집. Protocol Suite.
	: TCP , IP 자체와 관련있는게 아니라 OSI 7 레이어와 같이 네트워크를 이해하기 위한 모델이다.
		: 굳이 이 모델의 이름이 TCP/IP 인 것은 여러 프로토콜 중 TCP 와 IP 가 가장 많이 사용되기 때문.
		: 쩄뜬 작명센스가 ㅈㄴ 구리다는걸 새삼 다시 깨달음

	: 참고로 이 모델은 아레와 같은 4계층으로 이뤄진다
		1.Network Access Layer
		2.Internet Layer
		3.Transport Layer
		4.Application Layer

	: https://velog.io/@ksi05503/tcp-ip




ARP Address Resolution Protocol
	: IP 와 MAC 주소를 서로 매핑하는 절차. 그러니까 상대편의 MAC 어드레스를 알기 위해서 하는 동작.
		: 일반적으로 IP 주소만을 보기 때문에 IP 주소로만 통신을 생각하지만 IP 를 MAC 으로 바꾸는 절차를 거친다. 
		: IP == 논리적 주소, MAC == 물리적 주소


---------------------------------------------------------------------------------------




		
