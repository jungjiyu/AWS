계획: 의외로 널널한 듯? 걍 하루에 한 챕만 끝내도 개꿀임

일단 이번 미팅전까지 목표는 chap 4 까지

---------------------------------------------------------------------------------------------------------

chap 1. AWS 란
	(1) 클라우드 컴퓨팅
	(2) AWS 서비스
	(2) AWS 가입하기 - 프리티어

---------------------------------------------------------------------------------------------------------

1.1 클라우드 컴퓨팅
    : 온프레미스 VS 클라우드 >>IT 리소스를 구축하는 방법
	: https://blog.naver.com/gmldls2004/222718893578

 	: IT 리소스  >> 컴퓨터의 성능을 결정해 주는 요소들 . 
		: CPU , RAM 등 

	온프레미스 on-premises >> 사용자 자체적으로 보유한 서버로 운영하는 방식 . 사용자가 모든걸 직접 구축 및 운영하는 방식
		: premise 란 영단어 자체의 뜻 ) 기본. 건물. 토지
		: 클라우드 컴퓨팅 방식이 등장하기 전까지 대부분의 기업 인프라는 온프레미스로 구축되었음. 클라우드 등장 이후 대부분이 클라우드로 전환하였지만 (사용자 입장에선 물리적인 공간부터 일일이 구축해야되니까 상당히 부담이 크니까) 보안이 ㅈㄴ 중요한 경우 여전히 온프레미스로 구축한다.


	클라우드 컴퓨팅 Cloud >> 인터넷에 연결된 다른 컴퓨터를 통해(=원격으로=가상서버로) IT 리소스를 제공받는 방식. 
		: 이러한 방식을 클라우드 컴퓨팅이라고 히는 것은, 구름 처럼 보이지 않는 , 둥둥떠다니는 컴퓨팅 자원을 활용한다는 데에서 유래한 것. 

		: "클라우드" 
			1. "클라우드 컴퓨팅"의 약자
			2. 구름같이 눈에 보이지 않는 형태로 구성된 IT 자원 집합

		: 클라우드 서비스 제공자 CSP Cloud Service Provider >> 클라우드 서비스 제공자. 업체
			ex) AWS

		: Cloud 분류
		    1.  공개 범위 따른 분류
			: https://blog.daouidc.com/blog/private-cloud-vs-public-cloud
			(1) Public Cloud : 여러 기업이 임대한 IT자원을 사용하는 방식의 클라우드 서비스
				: 각 기업은 이미 가상화 구성이 완료된 IT 자원을 임대해 사용하게 되고, CSP 가 이를 관리해준다.

				: 대표적으론 AWS Amazon Web Service


			(2) Private Cloud : 하나의 기업만을 위해 운영되는 클라우드 서비스
				: 기업 자체적으로 IT 자원을 구성, 제어를 하게 된다.
				: 기업 자체적으로 만들고 쓰는거니까 결국 온프레미스인거다
					: 일반적으로는 cloud 와 on premise 가 반대되는 개념이지만, 이렇게 원격이고 기업자체적구축이라는 점에서 cloud 와 on premise 의 개념이 공존할 수도 있다.

			(3) Hybrid Cloud : public cloud + private cloud || cloud + on-premise
				: 모든 데이터를 (퍼블릭) 클라우드로 이전하기 보다는, 주요 데이터는 물리 서버에 두고 신규 서비스와 같은 트래픽을 예측할 수 없는 경우의 데이터만 가상 서버에 올려두는 것
				: 젤 많은 기업이 택하는 전략


		    2. 서비스 유형 따른 분류: CSP가 어느 영역까지 관리해주느냐 따라 분류
 		       : IaaS, PaaS, SaaS에서 설명되는 클라우드 컴퓨팅의 구성요소 9가지
			    : 사용자가 어떠한 구성요소들에 대해 관리 권한을 가지냐에 따라 클라우드 종류가 갈린다.
			    	- Server: 물리적 또는 가상 서버
			    	- Application : 사용자에게 제공되는 소프트웨어 프로그램
			    	- OS
			    	- Middleware
			    	- Data
			    	- Runtime: 애플리케이션 실행을 위한 환경
			    	- Virtualization
			    	- Storage
			    	- Networking

			(1) IaaS Infrastructure As A Service : 인프라 수준의 형태로 사용자에게 제공. 그러니까 원격으로 컴퓨터 제공.
				: 영단어로써의 "인프라" == 기본이되는 토대. 가장 기본이 되는 구성요소.
					: 그러니까 가장 기초적인 "인프라"만 CSP가 제공해주고, 그 외의 것들은 사용자가 직접 커스터마이징 가능.
			  		: 인프라는 >> server + network + storage + virtualization

				: 사용자는 관리 가능 자원 >> OS , Middleware , Runtime , Data , Application
				: 대표 서비스 >> AWS 의 EC2

			(2) PaaS Platform As A Service : 플랫폼 수준의 형태로 사용자에게 제공. 그러니까 원격으로 배포 환경 제공.
				: 플랫폼 >> 애플리케이션의 개발 및 배포를 위한 소프트웨어, 하드웨어 환경.
					: 그러니까 "플랫폼"을 CSP가 제공해주므로, 사용자는 오로지 애플리케이션 개발과 비즈니스에만 집중할 수 있다
				: 사용자 관리 가능 자원>> Application, Data

			(3) SaaS Software As A Service : 소프트웨어 수준의 형태로 제공. 그러니까 걍 완성된 소프트웨어를 제공.
				: 사용자 관리 가능 자원>> 없음			
				: 대표 서비스 >> 네이버클라우드, 구글 다르아브


		: on-demand :  사용자의 "요구"에 따라 리소스를 "즉시" 제공하고, "사용한 만큼" 비용을 지불한다.
			: 비즈니스 요구가 가변적인 상황에서 손쉽게 확장/축소 가능하다
			: Pay-Per-Use 랑 비슷한 용어긴 한데, on demand 는 좀 더 가용성에 초점이 맞춰진것

		: Pay-Per-Use: 실제로 소비한 리소스에 대해서만 비용을 지불한다
			: 사용한 만큼만 비용을 지불하므로 비용 절감이 가능하다.

---------------------------------------------------------------------------------------------------------

1.2 AWS

AWS Amazon Web Service >> public cloud 서비스를 제공하는 , Amzon 자회사
	: 리전 , 가용영역 >> 특정 영역을 지칭하기 위해 AWS 에서 사용하는 용어
		: 우리나라에는 서울 리전과, 4개의 가용영역이 있다.
		: 서버 ⊂ 데이터 센터 ⊂ Availability Zone ⊂ Region
		: 리전 Region >> 나라별 단위. AWS 서비스가 요청되고 그에 따른 응답을 받을 수 있는 지리적 위치를 기준으로 구분한(= AWS가 호스팅 되는 지리적 위치를 기준으로 구분한) 단위로, 2개 이상의 가용영역으로 구성된다.

			: 쉽게 설명하자면,  클라이언트와 가까운 곳에서 클라우드 서비스를 제공하기 위해 도입된 개념

			: 호스팅 hosting >> 서버에 배치된 리소스가 인터넷을 통해 접근 가능하게 되는 것
				: 호스팅 가능하다 == 요청을 통한 응답을 받을 수 있다

			
			: 많은 서비스는 리전을 기반으로 제공된다. 
				: 물리적 격리와 논리적 연결
					: 같은 리전에 속한 가용영역은 클러스터처럼 묶여있다. 각 가용영역들끼리는 (천재지변, 테러등에 대비하여) 물리적으로 멀리 떨어져있지만, 전용선으로 (논리적) 연결되어있기 때문에 빠른 속도로 통신이 가능하다.

					: 클러스터 >> 여러개 개별적인 것을 하나의 군집 처럼 연결해놓은 것.

				
 			: 각 리전은 독립적이다. 
				: 특정 리전에선 원하는 AWS 서비스가 아직 준비되지 않은 경우도 있고, 리전 별로 가격이 상이한 경우도 있다.
				: seoul 리전에서 생성한 AWS 자원은 seoul 리전에만 국한되고, 다른 리전에는 해당 자원이 존재하지 않는다. 
 


	 	: 가용영역 Availability Zone AZ>> 각 리전 내의 격리된 위치. 1개 이상의 물리적 데이터 센터로 구성됨.
			: 쉽게 설명하자면, 애플리케이션이 한 곳에서 뻑나도 다른 곳에서 정상 운영되게 하기 위해 도입한 개념
			: 물리적 데이터 센터는 50000 ~ 80000 대의 물리적 서버가 존재
			: 각 가용영역은 ( 같은 리전에 속해있더라도 ) 천재지변과 테러 등에 대비하여 서로 지리적으로 멀리 떨어져있다. 독립적이다.
			: 하나의 인스턴스에 장애가 발생하더라도, 복수의 AZ 에 걸쳐 인스턴스를 배포했다면,  다른 영역의 인스턴스가 요청을 이어받아 처리하게 할 수 있다.


		: https://yuna-story.tistory.com/145
		: https://kangmin517.tistory.com/entry/AWS-1-%EC%9A%A9%EC%96%B4-%EB%B0%8F-%EA%B8%B0%EB%B3%B8-%EC%84%A4%EB%AA%85-%EB%A6%AC%EC%A0%84%EA%B3%BC-%EA%B0%80%EC%9A%A9-%EC%98%81%EC%97%AD-Region-and-Availability-Zone



	: (작성시점기준) 대표적인 AWS 제공 서비스 
		: 지속적으로 업뎃되어 나중에는 더 생길지도
		1. computing : public cloud 의 서버 자원에 대해 가상 머신을 생성 및 관리할 수 있는 서비스
			:  Amazon Elastic Compute Cloud( Amazon EC2 ) >> 클라우드에서 컴퓨팅 자원을 안전하게 가변적으로 제공받을 수 있다. 

		2. networking : public cloud 에 생성한 다양한 자원으로 내/외부 통신을 하는 네트워크 서비스
			: 대표적으론 Amazon Virtual Private Cloud(VPC) , Amazon CloudFront, Amazon Route53 >> 생성된 클라우드 자원의 통신 환경 구성 가능
			
		3. storage : public cloud 에 안정적이고 확장성이 높은 storage 서비스
			: 대표적으론 Amazon Simple Storage Service(S3), Amazon Elastic File System(EFS), Amazon Elastic Block Store(EBS) > 빠르고 안정적이게 데이터 저장 가능

		4. database : public cloud 에 다양한 db 엔진을 제공하여 완전 관리형 db 서비스 
			: 대표적으론 Amazon Relational Database Service(RDS), Amazon Aurora, Amazon DynamoDB
		5. security : 서비스 및 자원에 대한 안전한 접근 관리 서비스
			: 대표적으론 AWS Identity & Access Management(IAM)



	: 과금 체계 
		: AWS 는 pay per use
		: 초기 12개월은 "free-tier" (prettier 아님) 이라고 , 무료 플랜 그거 씀 된다.


	: AWS 클라우드 자원 관리 방법
	******sol1.  AWS 관리 콘솔 manangement console : web 기반으로 쉽게 관리
			: 로그인 유형 에선 "루트 사용자" 택 (IAM 사용자가 아니라)
			: 상단탭
				: 서비스 유형
				: 리전 변경
					: 깔쌈하지 못하게 리전이 서울(ap-northeast-2)로 안되있을 수도 있으니 체크
				: 내이름-결제 및 비용관리
					: 의도치 않은 결제 상시 체크

		sol2.  AWS CLI : 셸 프로그램을 사용한 명령어 기반으로  관리
		sol3. AWS IaC Infrastructure as Code : 코드 기반으로 관리



