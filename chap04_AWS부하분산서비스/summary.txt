4.1 Amazon ELB

로드 밸런싱 load blanancing , 부하분산 >> 서버 - 클라이언트 환경에서, 서버가 클라이언트 요청을 받아 처리하는 과정에서 발생하는 부하(연산작업)에 대해 동일한 목적을 수행하는 다수의 서버에 분산 처리하는 기능	
	: 간단하게 말하면, 트래픽을 (서버로) 효율적으로 배분하는 기능.
	: "부하분산" == "로드 밸런싱" . 같은 뜻.
	: 부하분산을 사용 효과 >> 고가용성, 내결함성이 향상 
		고가용성 High availability >>시스템을 항시 사용 가능하게 하는 기능
		내결함성 Fault tolerance >>시스템 일부에 결함이 있더라도 계속 작동할 수 있게 하는 능력

로드 밸런서 load balancer >> 부하분산을 실행시키는 대상

Amazon ELB Elastic Load Balancing : Amazon EC2 인스턴스에서 운영중인 애플리케이션, 서비스로 유입되는 트래픽을 자동 분산 처리하는 기술
	: 여러 가용영역에서 작동
	: 지원
		: HTTP(S) , SSL 등 다양한 프로토콜
		: SSL 암호화 
		: 사용자가 같은 인스턴스에서 세션을 유지 가능
		: 네트워크 및 어플리케이션 수준의 로드밸런싱

	: 활용 방안 >> 다른 AWS 서비스와 짬뽕하여 유용하게 쓰인다
		: AWS 의 Cloudwatch 와 함께 >> 로그와 메트릭을 모니터링 
		: AWS 의 Autoscaling 과 함께 >> 트래픽이 증가할 때 자동으로 인스턴스를 추가하거나 제거하면서 애플리케이션 가용성을 유지

	: 원리 
		(0) 클라이언트가 ELB 의 DNS 주소로 트래픽을 전달(= request 를 보냄)
		(1)  로드 밸런서에서 클라이언트 request 를 수신받고, 클라이언트와 연결을 유지한 상태에서, request 를 수신하기 위해 리스너를 "등록"

		(2) 로드밸런서가 수신한 클라이언트 request 를 처리할 대상 그룹을 선택.

		(3) 로드밸런서가 ( 앞서 선택한 "대상 그룹" 내에서 ) request 를 처리할 대상을 딱 특정하고, 해당 대상으로 request 를 분산(=전달). 
			: 로드 밸런서는 각 대상의 상태를 모니터링하고 있어. 가용하지 않은 대상에겐 request 를 분산시키지 않음.
		
		(4) 분산된 request 대해 대상이 반환한 response 를 로드밸런서가 클라이언트에게 반환
 



	: 주요 구성 요소
		: 로드 밸런서는 가용영역 단위로, 리스너는 리전 단위로 배포함으로써 ELB가 각 가용영역으로 트래픽을 분산시키는걸 가능하게 한다.

		1. 로드 밸런서 Load Balancer >> 클라이언트와 직접적으로 소통( request 받고 response 전달 )하는 역할 + 내부적으론 클라이언트로부터 받은 request(트래픽)를 (상태가 정상인) 대상 그룹에 정의된 서버로 분배하는 역할
			: 가용영역 단위로, 로드 밸런서 "노드" 로써 배포된다.

		2. 대상 그룹 Target Group >> 로드 밸런서로부터 트래픽을 분배당할 하나 이상의 엔드포인트(예: EC2 인스턴스, Lambda 함수, IP 주소 등)를 정의하는 그룹
			: 일종의 인프라인가?


		3. 리스너 Listener >> 로드 밸런서가 받은 request 대해 적용할 rule 과 그에 대한 action(=그 규칙을 만족하는 request 일 경우 해당 request 를 어디로 라우팅 시킬건지) 을 정의 
			: 리전 단위로 배포된다.
			: 허용 가능한 포트와 프로토콜 등을 정의하여, 특정 대상 그룹으로 트래픽을 라우팅할 수 있게 해준다
				: 다양한 프로토콜을 지원
			: 일종의 라우팅 테이블인가?



	: ELB 를 생성할 때 로드 밸런서와 통신하는 방식
		: 인터넷 경계 로드 밸런서 >> 외부에서 직접 로드 밸런서에 접근하는 방식
		: 내부 로드 밸런서 >> 외부의 접근이 차단된 격리된 네트워크(=내부 네트워크)에서 로드 밸런서를 사용하는 방식

	: ELB 교차 로드 밸런싱 
		: 각 노드는 가용영역 내 대상 그룹으로 요청을 분산
		: 


	
 



